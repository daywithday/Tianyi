export default {
  route: {
    dashboard: 'Dashboard',
    chats: 'Char History',
    config: 'Public Configuration',
    management: 'Management',
    notice: 'notice',
    player: 'Player management',
    publicCity: 'Public City',
    TeleportFriend: 'Teleport Friend',
    DeathPenalty: 'Death Penalty',
    ZombieKillReward: 'Kill Reward',
    OnlineReward: 'Online Reward',
    privateHome: 'Private Home',
    pointsSystem: 'Points System',
    shop: 'shop',
    lotterSysten: 'Lotter Systen',
    externalLink: 'Interface Document',
    telnet: 'telnet',
    onlineMap: 'onlineMap',
    log: 'log',
    i18n: 'Switch language',
    documentation: 'Documentation',
    guide: 'Guide',
    permission: 'Permission',
    pagePermission: 'Page Permission',
    rolePermission: 'Role Permission',
    directivePermission: 'Directive Permission',
    icons: 'Icons',
    components: 'Components',
    tinymce: 'Tinymce',
    markdown: 'Markdown',
    jsonEditor: 'JSON Editor',
    dndList: 'Dnd List',
    splitPane: 'SplitPane',
    avatarUpload: 'Avatar Upload',
    dropzone: 'Dropzone',
    sticky: 'Sticky',
    countTo: 'Count To',
    componentMixin: 'Mixin',
    backToTop: 'Back To Top',
    dragDialog: 'Drag Dialog',
    dragSelect: 'Drag Select',
    dragKanban: 'Drag Kanban',
    charts: 'Charts',
    keyboardChart: 'Keyboard Chart',
    lineChart: 'Line Chart',
    mixChart: 'Mix Chart',
    example: 'Example',
    nested: 'Nested Routes',
    menu1: 'Menu 1',
    'menu1-1': 'Menu 1-1',
    'menu1-2': 'Menu 1-2',
    'menu1-2-1': 'Menu 1-2-1',
    'menu1-2-2': 'Menu 1-2-2',
    'menu1-3': 'Menu 1-3',
    menu2: 'Menu 2',
    Table: 'Table',
    dynamicTable: 'Dynamic Table',
    dragTable: 'Drag Table',
    inlineEditTable: 'Inline Edit',
    complexTable: 'Complex Table',
    tab: 'Tab',
    form: 'Form',
    createArticle: 'Create Article',
    editArticle: 'Edit Article',
    articleList: 'Article List',
    errorPages: 'Error Pages',
    page401: '401',
    page404: '404',
    errorLog: 'Error Log',
    excel: 'Excel',
    exportExcel: 'Export Excel',
    selectExcel: 'Export Selected',
    mergeHeader: 'Merge Header',
    uploadExcel: 'Upload Excel',
    zip: 'Zip',
    pdf: 'PDF',
    exportZip: 'Export Zip',
    theme: 'Theme',
    clipboardDemo: 'Clipboard',

    profile: 'Profile'
  },
  ZombieKillReward: {
    rewardPoints: 'Reward Points',
    rewardPointsTips: 'Reward Tips',
    isEnabled: 'whether it is enabled',
    triggerRequiredCount: 'The number of triggered kills'
  },
  OnlineReward: {
    rewardInterval: 'loop time',
    rewardPoints: 'Reward Points',
    rewardPointsTips: 'Reward Tips',
    isEnabled: 'whether it is enabled'
  },
  DeathPenalty: {
    deductPoints: 'Death deduction points',
    deductPointsTips: 'Deduct Tips',
    allowNegative: 'Whether to allow negative points',
    isEnabled: 'whether it is enabled'
  },
  button: {
    save: 'save',
    create: 'create',
    search: 'Search',
    send: 'modify',
    delete: 'delete'
  },
  serverInfo: {
    players: 'Online players',
    hostiles: 'zombies',
    animals: 'animal'
  },
  login: {
    server: 'server address',
    serverTip: 'Please enter the server address \\ IP, for example：localhost',
    port: 'port',
    portTip: 'Please enter the server port, for example：8888',
    accessToken: 'accessToken',
    accessTokenTip: 'Please enter the server accessToken, the location where the AccessToken is generated (configuration file)：7 Days to Die Dedicated Server \\ LSTY \\ functionConfig.xml',
    title: 'system login',
    logIn: 'log in'
  },
  config: {
    chatCommandCacheMaxCount: 'Command cache number',
    chatCommandPrefix: 'Command prefix',
    functionName: 'functionName',
    handleChatMessageError: 'Error command prompt',
    serverName: 'System display name',
    accessToken: 'Secret Key',
    enableGzip: 'Enable Gzip',
    openInDefaultBrowser: 'Whether the web will automatically pop up when the server is started',
    webApiPort: 'Web Port',
    webSocketPort: 'Terminal port'
  },
  management: {
    CommonConfig: 'Common Configuration',
    GameNotice: 'Game Notice',
    AntiCheat: 'Anti-cheat',
    PointsSystem: 'Point System',
    TeleportCity: 'Public Back to City',
    TeleportHome: 'Private home',
    GameStore: 'GameStore',
    LotterySystem: 'LotterySystem',
    TeleportFriend: 'Friend Teleport',
    DeathPenalty: 'Death Penalty',
    OnlineReward: 'Online Reward',
    ZombieKillReward: 'Kill Reward'
  },
  notice: {
    alternateInterval: 'Cycle time',
    alternateNotice: 'Carousel announcement',
    functionName: 'functionName',
    isEnabled: 'whether it is enabled',
    welcomeNotice: 'Welcome notice'
  },
  player: {
    allPlayer: 'History Player',
    onlinePlayer: 'Online Player',
    refresh: 'Refresh the list',
    package: 'View backpack',
    equipment: 'Equipment',
    belt: 'Belt',
    bag: 'backpack',
    index: 'Serial Number',
    name: 'nickname',
    totalPlayTime: 'Total play time',
    lastOnline: 'Last login time',
    day: ' day ',
    hour: ' hour ',
    minit: ' minutes'
  },
  publicCity: {
    availableCityTips: 'Main City List',
    coolingTips: 'Cooling Tips',
    functionName: 'functionName',
    isEnabled: 'Whether to enable',
    noneCityTips: 'No City Tips',
    pointsNotEnoughTips: 'Insufficient Points Tips',
    queryListCmd: 'Command',
    queryListTips: 'Transfer Tips',
    teleInterval: 'Cooldown time',
    teleSucceedTips: 'Successful tips for returning to the city',
    cityName: 'city name',
    command: 'Command',
    pointsRequired: 'Points spent',
    position: 'Three-dimensional coordinates'
  },
  privateHome: {
    coolingTips: 'Cooling Tips',
    deleteHomeCmdPrefix: 'Delete Command',
    deleteSucceedTips: 'Successful Delete Tips',
    functionName: 'functionName',
    homeNotFoundTips: 'No Coordinate Tips',
    homePositionTips: 'Coordinate Tips',
    isEnabled: 'Whether to enable',
    maxCanSetCount: 'Maximum Quantity',
    noneHaveHomeTips: 'Tips are not set',
    overLimitTips: 'Exceeding Tips',
    overwriteOldSucceedTips: 'Overwrite Tips',
    ownedHomeTips: 'Already Owned Tips',
    pointsRequiredForSet: 'Set Points',
    pointsRequiredForTele: 'Transfer Points',
    queryListCmd: 'Query Command',
    setHomeCmdPrefix: 'Set Command',
    setPointsNotEnoughTips: 'Set Points Not EnoughTips',
    setSucceedTips: 'Successful Setting Tips',
    teleHomeCmdPrefix: 'Home Command',
    teleInterval: 'Cooling Time',
    telePointsNotEnoughTips: 'Not enough points to go home',
    teleSucceedTips: 'Successful Tips for Going Home'
  },
  TeleportFriend: {
    coolingTips: 'Cooling Tips',
    pointsNotEnoughTips: 'tips for insufficient points',
    pointsRequired: 'Points consumption',
    targetNotFoundTips: 'Target does not exist tips',
    targetNotFriendTips: 'The target is not a friend tip',
    teleCmd: 'Transfer command',
    teleInterval: 'cooling time',
    teleSucceedTips: 'Successful transmission prompt',
    isEnabled: 'whether it is enabled'
  },
  about: {
    content: 'Tianyi Seven Days Kill Management System'
  },
  shop: {
    buySuccessfullyTips: 'Successful purchase tips',
    goodsNoFoundTips: 'The product does not exist tips',
    pointsNotEnoughTips: 'tips for insufficient points',
    queryListCmd: 'Query Mall Command',
    queryListPreTips: 'Product list tips',
    queryListTips: 'Product display field sorting',
    isEnabled: 'whether it is enabled',
    list: 'Mall List',
    buyCmd: 'Buy order',
    content: 'Product content',
    count: 'Product quantity',
    name: 'product name',
    price: 'Commodity price',
    quality: 'product quality',
    position: 'Commodity type',
    contentType: 'items/blocks/entities/commands'
  },
  lotterSysten: {
    currentLotteryCmd: 'Lottery instruction',
    endLotteryTips: 'Tips for the end of the draw',
    isEnabled: 'whether it is enabled',
    lotteryDuration: 'lottery duration',
    lotteryInterval: 'lottery cycle time',
    maxWinnerCount: 'Maximum number of winnings',
    notWinningTips: 'Not WinningTips',
    startLotteryTips: 'Start Lottery Tips',
    winningTips: 'Winning Tips',
    content: 'Prize content',
    name: 'Prize name',
    count: 'Number of prizes',
    quality: 'Reward quality',
    contentType: 'Prize Type',
    list: 'Prize list'
  },
  telnet: {
    placeholder: 'Please enter the instruction',
    send: 'send',
    server: 'server'
  },
  pointsSystem: {
    functionName: 'functionName',
    initialCount: 'Initial Points',
    isEnabled: 'Whether to enable',
    neverSignInTips: 'Not Sign In Tips',
    queryPointsCmd: 'Query Command',
    queryPointsTips: 'Query Tips',
    rewardCount: 'check-in points',
    signCmd: 'Sign In Instructions',
    signFailTips: 'Sign in failed prompt',
    signInterval: 'Sign in cooling time',
    signSucceedTips: 'Successful sign-in prompt',
    playerPoints: 'player points',
    steamId: 'steamId',
    count: 'points'
  },
  navbar: {
    dashboard: 'Dashboard',
    github: 'Github',
    logOut: 'Log Out',
    profile: 'Profile',
    theme: 'Theme',
    size: 'Global Size'
  },

  documentation: {
    documentation: 'Documentation',
    github: 'Github Repository'
  },
  permission: {
    addRole: 'New Role',
    editPermission: 'Edit',
    roles: 'Your roles',
    switchRoles: 'Switch roles',
    tips: 'In some cases, using v-permission will have no effect. For example: Element-UI  el-tab or el-table-column and other scenes that dynamically render dom. You can only do this with v-if.',
    delete: 'Delete',
    confirm: 'Confirm',
    cancel: 'Cancel'
  },
  guide: {
    description: 'The guide page is useful for some people who entered the project for the first time. You can briefly introduce the features of the project. Demo is based on ',
    button: 'Show Guide'
  },
  components: {
    documentation: 'Documentation',
    tinymceTips: 'Rich text is a core feature of the management backend, but at the same time it is a place with lots of pits. In the process of selecting rich texts, I also took a lot of detours. The common rich texts on the market have been basically used, and I finally chose Tinymce. See the more detailed rich text comparison and introduction.',
    dropzoneTips: 'Because my business has special needs, and has to upload images to qiniu, so instead of a third party, I chose encapsulate it by myself. It is very simple, you can see the detail code in @/components/Dropzone.',
    stickyTips: 'when the page is scrolled to the preset position will be sticky on the top.',
    backToTopTips1: 'When the page is scrolled to the specified position, the Back to Top button appears in the lower right corner',
    backToTopTips2: 'You can customize the style of the button, show / hide, height of appearance, height of the return. If you need a text prompt, you can use element-ui el-tooltip elements externally',
    imageUploadTips: 'Since I was using only the vue@1 version, and it is not compatible with mockjs at the moment, I modified it myself, and if you are going to use it, it is better to use official version.'
  },
  table: {
    dynamicTips1: 'Fixed header, sorted by header order',
    dynamicTips2: 'Not fixed header, sorted by click order',
    dragTips1: 'The default order',
    dragTips2: 'The after dragging order',
    title: 'Title',
    importance: 'Imp',
    type: 'Type',
    remark: 'Remark',
    search: 'Search',
    add: 'Add',
    export: 'Export',
    reviewer: 'reviewer',
    id: 'ID',
    date: 'Date',
    author: 'Author',
    readings: 'Readings',
    status: 'Status',
    actions: 'Actions',
    edit: 'Edit',
    publish: 'Publish',
    draft: 'Draft',
    delete: 'Delete',
    cancel: 'Cancel',
    confirm: 'Confirm'
  },
  example: {
    warning: 'Creating and editing pages cannot be cached by keep-alive because keep-alive include does not currently support caching based on routes, so it is currently cached based on component name. If you want to achieve a similar caching effect, you can use a browser caching scheme such as localStorage. Or do not use keep-alive include to cache all pages directly. See details'
  },
  errorLog: {
    tips: 'Please click the bug icon in the upper right corner',
    description: 'Now the management system are basically the form of the spa, it enhances the user experience, but it also increases the possibility of page problems, a small negligence may lead to the entire page deadlock. Fortunately Vue provides a way to catch handling exceptions, where you can handle errors or report exceptions.',
    documentation: 'Document introduction'
  },
  excel: {
    export: 'Export',
    selectedExport: 'Export Selected Items',
    placeholder: 'Please enter the file name (default excel-list)'
  },
  zip: {
    export: 'Export',
    placeholder: 'Please enter the file name (default file)'
  },
  pdf: {
    tips: 'Here we use window.print() to implement the feature of downloading PDF.'
  },
  theme: {
    change: 'Change Theme',
    documentation: 'Theme documentation',
    tips: 'Tips: It is different from the theme-pick on the navbar is two different skinning methods, each with different application scenarios. Refer to the documentation for details.'
  },
  tagsView: {
    refresh: 'Refresh',
    close: 'Close',
    closeOthers: 'Close Others',
    closeAll: 'Close All'
  },
  settings: {
    title: 'Page style setting',
    theme: 'Theme Color',
    tagsView: 'Open Tags-View',
    fixedHeader: 'Fixed Header',
    sidebarLogo: 'Sidebar Logo'
  }
}
